{"version":3,"file":"/js/growtype-quiz-public.js","mappings":"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","sources":["webpack://sage/webpack/runtime/chunk loaded","webpack://sage/./resources/js/helpers/getQuizData.js","webpack://sage/./resources/js/events/saveQuizDataEvent.js","webpack://sage/./resources/js/actions/progress/general.js","webpack://sage/./resources/js/actions/question/updateQuizComponents.js","webpack://sage/./resources/js/events/showQuestionEvent.js","webpack://sage/./resources/js/actions/progress/counter/updateProgressCounter.js","webpack://sage/./resources/js/actions/progress/counter/updateQuestionsCounter.js","webpack://sage/./resources/js/actions/progress/bar/updateProgressBar.js","webpack://sage/./resources/js/events/showSuccessQuestionEvent.js","webpack://sage/./resources/js/listeners/validation/type/input.js","webpack://sage/./resources/js/listeners/validation/validateQuestion.js","webpack://sage/./resources/js/listeners/validation/type/radio.js","webpack://sage/./resources/js/listeners/validation/type/open.js","webpack://sage/./resources/js/listeners/validation/type/general.js","webpack://sage/./resources/js/actions/crud/collectQuizData.js","webpack://sage/./resources/js/events/collectQuizDataEvent.js","webpack://sage/./resources/js/actions/question/updateBgImage.js","webpack://sage/./resources/js/components/answerTrigger.js","webpack://sage/./resources/js/actions/progress/loader/loader.js","webpack://sage/./resources/js/events/loaderFinishedEvent.js","webpack://sage/./resources/js/events/loaderStartedEvent.js","webpack://sage/./resources/js/components/input.js","webpack://sage/./resources/js/actions/question/showNextQuestion.js","webpack://sage/./resources/js/components/textareaCharactersCounter.js","webpack://sage/./resources/js/events/showNextQuestionEvent.js","webpack://sage/./resources/js/components/nextQuestionTrigger.js","webpack://sage/./resources/js/events/nextQuestionTriggerEvent.js","webpack://sage/./resources/js/events/validateQuestionEvent.js","webpack://sage/./resources/js/actions/question/showPreviousQuestion.js","webpack://sage/./resources/js/components/previousQuestionTrigger.js","webpack://sage/./resources/js/components/unitSystem.js","webpack://sage/./resources/js/state/updateStorage.js","webpack://sage/./resources/js/actions/progress/timer/duration.js","webpack://sage/./resources/js/listeners/saveQuizDataListener.js","webpack://sage/./resources/js/actions/question/prepareSubmitFormData.js","webpack://sage/./resources/js/events/resultsEvaluatedEvent.js","webpack://sage/./resources/js/components/restartQuizTrigger.js","webpack://sage/./resources/js/actions/question/showFirstQuestion.js","webpack://sage/./resources/js/listeners/showSuccessQuestionListener.js","webpack://sage/./resources/js/actions/crud/evaluateQuizData.js","webpack://sage/./resources/js/listeners/loaderFinishedListener.js","webpack://sage/./resources/js/growtype-quiz-public.js","webpack://sage/./resources/js/actions/question/showInitialQuestion.js","webpack://sage/./resources/js/components/modal.js","webpack://sage/./resources/js/actions/progress/timer/countDownTimer.js","webpack://sage/webpack/bootstrap","webpack://sage/webpack/runtime/hasOwnProperty shorthand","webpack://sage/webpack/runtime/jsonp chunk loading","webpack://sage/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","export function getQuizData(quizId) {\n    return window.growtype_quiz_data[quizId];\n}\n","export function saveQuizDataEvent(params) {\n    return new CustomEvent(\"growtypeQuizSaveQuizData\", {\n        detail: params\n    });\n}\n","export function hideProgressIndicators(quizWrapper) {\n    let quizId = quizWrapper.attr('id');\n    quizWrapper.find('.growtype-quiz-progressbar').hide();\n    quizWrapper.find('.growtype-quiz-header').hide();\n    quizWrapper.find('.growtype-quiz-nav').hide();\n\n    if (quizWrapper.find('.growtype-quiz-timer').length > 0) {\n        quizWrapper.find('.growtype-quiz-timer').hide();\n        clearInterval(window.growtype_quiz_global[quizId]['countdown_timer']);\n    }\n}\n\nexport function showProgressIndicators(quizWrapper) {\n    quizWrapper.find('.growtype-quiz-header').show();\n    quizWrapper.find('.growtype-quiz-nav').show();\n\n    if (quizWrapper.find('.growtype-quiz-timer').length > 0) {\n        quizWrapper.find('.growtype-quiz-timer').show();\n    }\n}\n\nexport function disabledValueIsIncluded(quizWrapper, disabledIf) {\n    let quizId = quizWrapper.attr('id');\n    let key = disabledIf.split(\":\")[0];\n    let values = disabledIf.split(\":\")[1].split(\"|\");\n\n    if (window.growtype_quiz_data[quizId]['answers'][key] !== undefined) {\n        let includes = false;\n        values.map(function (value) {\n            if (window.growtype_quiz_data[quizId]['answers'][key].includes(value)) {\n                includes = true;\n            }\n        })\n\n        if (includes) {\n            return true;\n        }\n    } else {\n        return false;\n    }\n\n    return false;\n}\n","import {hideProgressIndicators} from \"../progress/general\";\n\n/**\n * Update attributes of quiz components\n */\nexport function updateQuizComponents(question) {\n    let quizWrapper = question.closest('.growtype-quiz-wrapper');\n\n    /**\n     * Hide progress indicators\n     */\n    if (question.attr('data-hide-footer') === 'true') {\n        hideProgressIndicators(quizWrapper);\n    }\n\n    /**\n     * Back btn\n     */\n    if (question.length > 0) {\n        if (parseInt($(question).attr('data-question-nr')) === 1 && quizWrapper.find('.growtype-quiz-nav .growtype-quiz-btn-go-back').hasClass('hide-initially')) {\n            quizWrapper.find('.growtype-quiz-nav .growtype-quiz-btn-go-back').fadeOut();\n        } else {\n            quizWrapper.find('.growtype-quiz-nav .growtype-quiz-btn-go-back').fadeIn();\n        }\n    }\n\n    if (question.attr('data-hide-back-button') === 'true') {\n        quizWrapper.find('.growtype-quiz-nav .growtype-quiz-btn-go-back:not(.show-initially)')\n            .filter(function () {\n                return !$(this).closest('.growtype-quiz-header').length;\n            }).hide();\n    }\n\n    /**\n     * Next btn\n     */\n    if (question.length > 0) {\n        if (question.attr('data-hide-next-button') === 'true') {\n            quizWrapper.find('.growtype-quiz-nav .growtype-quiz-btn-go-next').hide();\n        } else {\n            quizWrapper.find('.growtype-quiz-nav .growtype-quiz-btn-go-next').show();\n        }\n    }\n\n    /**\n     * Progress bar\n     */\n    if (question.attr('data-hide-progressbar') === 'true') {\n        quizWrapper.find('.growtype-quiz-progressbar').fadeOut(200);\n    } else {\n        quizWrapper.find('.growtype-quiz-progressbar').fadeIn();\n    }\n\n    /**\n     * Set question type attribute to highest dom element\n     */\n    $('body')\n        .attr('data-current-question-type', question.attr('data-question-type'))\n        .attr('data-current-question-style', question.attr('data-question-style'))\n        .attr('data-current-answer-type', question.attr('data-answer-type'))\n\n    /**\n     * Hide next btn on single instant question\n     */\n    if ($(question).attr('data-answer-type') === 'single_instant') {\n        quizWrapper.find('.growtype-quiz-nav[data-type=\"footer\"] .growtype-quiz-btn-go-back:not(.show-initially)').hide();\n        quizWrapper.find('.growtype-quiz-nav[data-type=\"footer\"] .growtype-quiz-btn-go-next').hide();\n    }\n}\n","export function showQuestionEvent(params) {\n    return new CustomEvent(\"growtypeQuizShowQuestion\", {\n        detail: params\n    });\n}\n","/**\n * Show current slide\n */\nexport function updateProgressCounter(quizWrapper) {\n    let quizId = quizWrapper.attr('id');\n    let slideTotalNrFormatted = window.growtype_quiz_global[quizId]['quiz_questions_amount'] < 10 ? '0' + window.growtype_quiz_global[quizId]['quiz_questions_amount'] : window.growtype_quiz_global[quizId]['quiz_questions_amount'];\n    let slideNrFormatted = window.growtype_quiz_global[quizId]['current_question_counter_nr'] < 10 ? '0' + window.growtype_quiz_global[quizId]['current_question_counter_nr'] : window.growtype_quiz_global[quizId]['current_question_counter_nr'];\n\n    if (quizWrapper.find('.growtype-quiz-question-nr').attr('data-counter-style') === 'steps' || quizWrapper.find('.growtype-quiz-question-nr').attr('data-counter-style') === 'outof') {\n        slideTotalNrFormatted = window.growtype_quiz_global[quizId]['quiz_questions_amount'];\n        slideNrFormatted = window.growtype_quiz_global[quizId]['current_question_counter_nr'];\n    }\n\n    if (quizWrapper.find('.growtype-quiz-question-nr').attr('data-counter-style') === 'answered_only') {\n        slideTotalNrFormatted = window.growtype_quiz_global[quizId]['quiz_questions_amount'];\n        slideNrFormatted = window.growtype_quiz_global[quizId]['current_question_counter_nr'] - 1;\n    }\n\n    quizWrapper.find('.growtype-quiz-question-nr .growtype-quiz-question-nr-current-slide').text(slideNrFormatted);\n    quizWrapper.find('.growtype-quiz-question-nr .growtype-quiz-question-nr-total-slide').text(slideTotalNrFormatted);\n\n    /**\n     * Set question attribute to highest dom element\n     */\n    $('body').attr('data-current-question', window.growtype_quiz_global[quizId]['current_question_nr']);\n}\n","import {disabledValueIsIncluded} from \"../general\";\n\nexport function updateQuestionsCounter(quizWrapper, nextQuestion = null) {\n    let quizId = quizWrapper.attr('id');\n\n    /**\n     * Update url quiz nr\n     */\n    if (quizWrapper.find('.growtype-quiz').attr('data-show-question-nr-in-url')) {\n        let updateUrlNr = true;\n        if (nextQuestion && nextQuestion.attr('data-key') === 'final') {\n            updateUrlNr = false;\n        }\n\n        if (updateUrlNr) {\n            let searchParams = new URLSearchParams(window.location.search);\n            searchParams.set('question', window.growtype_quiz_global[quizId]['current_question_nr']);\n            let newurl = window.location.protocol + \"//\" + window.location.host + window.location.pathname + '?' + searchParams.toString();\n            window.history.pushState({path: newurl}, '', newurl);\n        }\n    }\n\n    window.growtype_quiz_global[quizId]['quiz_questions_amount'] = quizWrapper.find('.growtype-quiz-question[data-funnel=\"a\"]:not(.growtype-quiz-question[data-question-type=\"success\"]):not(.is-always-visible):not(.exclude-questions-amount)').length;\n    window.growtype_quiz_global[quizId]['quiz_counted_questions_amount'] = quizWrapper.find('.growtype-quiz-question[data-funnel=\"a\"]:not(.growtype-quiz-question[data-question-type=\"success\"]):not(.growtype-quiz-question[data-question-type=\"info\"]):not([class*=\"skipped\"]):not(.is-always-visible)').length + window.growtype_quiz_global[quizId]['additional_questions_amount'];\n\n    if (window.growtype_quiz_global[quizId]['already_visited_questions_funnels']) {\n        window.growtype_quiz_global[quizId]['already_visited_questions_funnels'].map(function (element) {\n            if (element !== window.growtype_quiz_global[quizId]['initial_funnel']) {\n                let extraSlides = quizWrapper.find('.growtype-quiz-question[data-funnel=\"' + element + '\"]:not(.growtype-quiz-question[data-question-type=\"success\"]):not(.is-always-visible)').length;\n                window.growtype_quiz_global[quizId]['quiz_questions_amount'] = window.growtype_quiz_global[quizId]['quiz_questions_amount'] + extraSlides;\n            }\n        });\n    }\n\n    /**\n     * Check conditionally disabled questions and subtract them from questions amount\n     */\n    if (window.growtype_quiz_data[quizId] && Object.entries(window.growtype_quiz_data[quizId]['answers']).length > 0) {\n        quizWrapper.find('.growtype-quiz-question').each(function (index, element) {\n            if ($(element).attr('data-disabled-if').length > 0) {\n                if (disabledValueIsIncluded(quizWrapper, $(element).attr('data-disabled-if'))) {\n                    window.growtype_quiz_global[quizId]['quiz_questions_amount']--;\n                    window.growtype_quiz_global[quizId]['quiz_counted_questions_amount']--;\n                }\n            }\n        });\n    }\n\n    if (quizWrapper.find('.growtype-quiz-question.is-active:visible').hasClass('is-visible') && !quizWrapper.find('.growtype-quiz-question.is-active:visible').prev().hasClass('is-always-visible')) {\n        window.growtype_quiz_global[quizId]['quiz_questions_amount']--;\n    }\n}\n","let progressbarIndicatorWidth = 0;\nlet progressbarStepWidth = 0;\n\n/**\n * Update progress bar\n */\nexport function updateProgressBar(quizWrapper) {\n    let quizId = quizWrapper.attr('id');\n    let progressBar = quizWrapper.find('.growtype-quiz-progressbar');\n    let questionsAmount = window.growtype_quiz_global[quizId]['quiz_counted_questions_amount'];\n    let questionsCounterNr = window.growtype_quiz_global[quizId]['current_question_counter_nr'];\n    let chapters = quizWrapper.find('.growtype-quiz-question.chapter-start').length;\n\n    if (quizWrapper.find('.growtype-quiz-question.first-question').attr('data-question-type') !== 'general') {\n        questionsCounterNr = questionsCounterNr - 1;\n    }\n\n    if (progressBar.length === 0 || questionsCounterNr === 0) {\n        quizWrapper.find('.growtype-quiz-progressbar-inner').width(0);\n    }\n\n    let progressbarWidth = progressBar.width();\n\n    if (progressbarWidth === 0) {\n        return;\n    }\n\n    if (chapters > 0) {\n        chapters = chapters + 1;\n\n        quizWrapper.find('.growtype-quiz-progressbar .growtype-quiz-progressbar-chapter').remove()\n\n        let mainFunnelQuestionNr = 0;\n        let separatorsStepSize = [];\n        quizWrapper.find('.growtype-quiz .growtype-quiz-question').each(function (index, element) {\n            if (\n                $(element).attr('data-question-type') !== 'info'\n                &&\n                (\n                    $(element).attr('data-funnel') === window.growtype_quiz_global[quizId]['initial_funnel'] ||\n                    $(element).hasClass('is-conditionally-cloned')\n                )\n            ) {\n                mainFunnelQuestionNr++;\n            }\n\n            if ($(element).hasClass('chapter-start')) {\n                if (separatorsStepSize.length === 0) {\n                    separatorsStepSize.push({\n                        chapter_start: 0,\n                        chapter_end: mainFunnelQuestionNr,\n                        steps_difference: mainFunnelQuestionNr,\n                    })\n                } else {\n                    separatorsStepSize.push({\n                        chapter_start: separatorsStepSize[separatorsStepSize.length - 1]['chapter_end'],\n                        chapter_end: mainFunnelQuestionNr,\n                        steps_difference: mainFunnelQuestionNr - separatorsStepSize[separatorsStepSize.length - 1]['chapter_end'],\n                    })\n                }\n            }\n        })\n\n        separatorsStepSize.push({\n            chapter_start: separatorsStepSize[separatorsStepSize.length - 1]['chapter_end'],\n            chapter_end: questionsAmount,\n            steps_difference: questionsAmount - separatorsStepSize[separatorsStepSize.length - 1]['chapter_end'],\n        })\n\n        let chapterLength = progressbarWidth / chapters;\n\n        for (let i = 1; i < chapters; i++) {\n            quizWrapper.find('.growtype-quiz-progressbar').append('<span class=\"growtype-quiz-progressbar-chapter\" style=\"left:' + (chapterLength * i) + 'px;\"></span>')\n        }\n\n        let currentStepsLength = 0;\n        separatorsStepSize.map(function (element, index) {\n            if (element['chapter_start'] < questionsCounterNr) {\n                let stepSize = element['chapter_end'] - questionsCounterNr === 0 ? 1 : element['chapter_end'] - questionsCounterNr;\n\n                progressbarStepWidth = (chapterLength / element['steps_difference']) * (questionsCounterNr - element['chapter_start']);\n\n                if (progressbarStepWidth > chapterLength) {\n                    progressbarStepWidth = chapterLength;\n                }\n\n                currentStepsLength += progressbarStepWidth;\n            }\n        })\n\n        progressbarIndicatorWidth = currentStepsLength;\n    } else {\n        progressbarStepWidth = progressbarWidth / questionsAmount;\n        progressbarIndicatorWidth = questionsCounterNr * progressbarStepWidth;\n    }\n\n    quizWrapper.find('.growtype-quiz-progressbar-inner').width(progressbarIndicatorWidth);\n\n    sessionStorage.setItem(quizGlobalStorageKey, JSON.stringify(window.growtype_quiz_global))\n}\n","export function showSuccessQuestionEvent(params = {}) {\n    return new CustomEvent(\"growtypeQuizShowSuccessQuestion\", {\n        detail: params\n    });\n}\n","export function input(currentQuestion) {\n    const validateEmail = (email) => {\n        return String(email)\n            .toLowerCase()\n            .match(\n                /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|.(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n            );\n    };\n\n    currentQuestion.find('input:visible[required],textarea:visible[required]').removeClass('is-invalid');\n\n    let isValid = true;\n    currentQuestion.find('input:visible[required],textarea:visible[required]').each(function (index, element) {\n        if (\n            (\n                $(element).attr('min') !== undefined && parseInt($(element).val()) < parseInt($(element).attr('min'))\n            )\n            ||\n            (\n                $(element).attr('max') !== undefined && parseInt($(element).val()) > parseInt($(element).attr('max'))\n            )\n            ||\n            (\n                $(element).val().length === 0\n            )\n            ||\n            (\n                $(element).attr('type') === 'email' && !validateEmail($(element).val())\n            )\n        ) {\n            $(element).addClass('is-invalid');\n            isValid = false;\n        }\n    })\n\n    return isValid;\n}\n","import {radio} from \"./type/radio\";\nimport {open} from \"./type/open\";\nimport {general} from \"./type/general\";\nimport {input} from \"./type/input\";\n\ndocument.addEventListener('growtypeQuizValidateQuestion', validateQuestionEventHandler)\n\nfunction validateQuestionEventHandler(event) {\n    let currentQuestion = $(event['detail']['currentQuestion']);\n    validateQuestion(currentQuestion)\n}\n\nexport function validateQuestion(selectedQuestion) {\n    let quizWrapper = selectedQuestion.closest('.growtype-quiz-wrapper');\n    let quizId = quizWrapper.attr('id');\n    let isValid = true;\n\n    quizWrapper.find('.growtype-quiz-question:visible').each(function (index, element) {\n        let currentQuestion = $(element);\n\n        /**\n         * First Check general inputs\n         */\n        isValid = input(currentQuestion);\n\n        if (isValid) {\n            if (currentQuestion.attr('data-question-type') === 'radio') {\n                isValid = radio(currentQuestion);\n            } else if (currentQuestion.attr('data-question-type') === 'open') {\n                isValid = open(currentQuestion);\n            } else if (currentQuestion.attr('data-question-type') === 'general') {\n                isValid = general(currentQuestion);\n            }\n        }\n\n        let checkboxes = $(element).find('input[type=\"checkbox\"]')\n        let checkboxesAmount = checkboxes.length\n\n        /**\n         * Update validity class\n         */\n        if (checkboxesAmount > 0) {\n            checkboxes.each(function (index, element) {\n                if (!$(element).is(':checked')) {\n                    isValid = false;\n                }\n            });\n        }\n\n        quizWrapper.removeClass('is-valid is-half-valid');\n\n        if ($(element).find('input:not([type=\"checkbox\"])').val() !== undefined && $(element).find('input:not([type=\"checkbox\"])').val().length > 0) {\n            quizWrapper.addClass(isValid ? 'is-valid' : 'is-half-valid');\n        } else {\n            quizWrapper.addClass(isValid ? 'is-valid' : '');\n        }\n\n        if (!isValid) {\n            $(element).find('.growtype-quiz-question-answers').addClass('anim-wrong-selection');\n\n            setTimeout(function () {\n                $(element).find('.growtype-quiz-question-answers').removeClass('anim-wrong-selection');\n            }, 500);\n\n            return false;\n        }\n    });\n\n    window.growtype_quiz_global[quizId]['is_valid'] = isValid;\n}\n\n","export function radio(currentQuestion) {\n    let isValid = true;\n    let activeBtns = currentQuestion.find('.growtype-quiz-question-answer.is-active');\n\n    if (activeBtns.length === 0) {\n        isValid = false;\n    }\n\n    if (isValid && $('.growtype-quiz-wrapper').attr('data-quiz-type') === 'scored' && $('.growtype-quiz-wrapper').attr('data-show-correct-answer') && $('.growtype-quiz-wrapper').attr('data-correct-answers-trigger') === 'on_submit') {\n        activeBtns.map(function (index, element) {\n            if ($(element).attr('data-cor') !== '1') {\n                isValid = false;\n                $(element).addClass('is-wrong')\n            }\n        });\n\n        let correctAnswersSelected = true;\n        currentQuestion.find('.growtype-quiz-question-answer[data-cor=\"1\"]').map(function (index, element) {\n            if (!$(element).hasClass('is-active')) {\n                isValid = false;\n                correctAnswersSelected = false;\n            }\n        });\n\n        if (correctAnswersSelected) {\n            isValid = true;\n            currentQuestion.find('.growtype-quiz-question-answer').removeClass('is-wrong');\n            currentQuestion.find('.growtype-quiz-question-answer[data-cor=\"1\"]').addClass('is-correct');\n            currentQuestion.find('.growtype-quiz-question-answer.is-wrong').removeClass('is-active');\n        }\n    }\n\n    if (!isValid) {\n        if (currentQuestion.attr('data-hint')) {\n            currentQuestion.find('.growtype-quiz-hint').fadeIn();\n        }\n    }\n\n    return isValid;\n}\n","export function open(currentQuestion) {\n    let isValid = true;\n    let textarea = currentQuestion.find('textarea').val();\n\n    if (textarea.length === 0) {\n        isValid = false;\n    }\n\n    return isValid;\n}\n","export function general(currentQuestion) {\n    let isValid = true;\n    let answers = currentQuestion.find('.growtype-quiz-question-answer');\n    let answer = currentQuestion.find('.growtype-quiz-question-answer.is-active');\n\n    if (answers.length > 0 && answer.length === 0) {\n        isValid = false;\n    }\n\n    return isValid;\n}\n","import {getQuizData} from \"../../helpers/getQuizData\";\nimport {collectQuizDataEvent} from \"../../events/collectQuizDataEvent\";\n\nlet existingAnswersParams = new URLSearchParams(window.location.search).get('answers');\nlet existingAnswers = {};\n\nif (existingAnswersParams) {\n    let pairs = existingAnswersParams.split('|');\n\n    pairs.forEach(pair => {\n        let [key, value] = pair.split(':');\n        if (key && value) {\n            existingAnswers[key] = value.split(',');\n        }\n    });\n}\n\nexport function collectQuizData(currentQuestion) {\n    let quizWrapper = currentQuestion.closest('.growtype-quiz-wrapper');\n    let quizId = quizWrapper.attr('id');\n    let answers = getQuizData(quizId)['answers'];\n\n    if (Object.keys(existingAnswers).length > 0) {\n        for (let existingAnswer in existingAnswers) {\n            if (answers.hasOwnProperty(existingAnswer)) {\n                answers[existingAnswer] = [...new Set([...answers[existingAnswer], ...existingAnswers[existingAnswer]])];\n            } else {\n                answers[existingAnswer] = existingAnswers[existingAnswer];\n            }\n        }\n    }\n\n    let correctlyAnswered = getQuizData(quizId)['correctly_answered'];\n    let currentQuestionKey = currentQuestion.attr('data-key');\n    let currentQuestionType = currentQuestion.attr('data-question-type');\n\n    /**\n     * Skip info questions\n     */\n    if (currentQuestionType === 'info') {\n        return;\n    }\n\n    /**\n     * Init answers array\n     */\n    answers[currentQuestionKey] = [];\n\n    /**\n     * Collect answers\n     */\n    if (currentQuestionType === 'open') {\n        answers[currentQuestionKey].push(currentQuestion.find('textarea').val())\n    } else {\n        currentQuestion.find('.growtype-quiz-question-answer.is-active').map(function (index, element) {\n            answers[currentQuestionKey].push($(this).attr('data-value'))\n        });\n    }\n\n    /**\n     * Collect correct answers\n     */\n    if (quizWrapper.attr('data-quiz-type') === 'scored' && currentQuestionType !== 'open') {\n        let correctAnswer = true;\n        currentQuestion.find('.growtype-quiz-question-answer').map(function (index, element) {\n            if ($(this).hasClass('is-active') && $(this).attr('data-cor').length === 0) {\n                correctAnswer = false;\n            }\n        });\n\n        if (!correctlyAnswered[currentQuestionKey]) {\n            correctlyAnswered[currentQuestionKey] = [];\n        }\n\n        correctlyAnswered[currentQuestionKey].push(correctAnswer);\n    }\n\n    /**\n     * Collect inputs data\n     */\n    if (currentQuestion.find('input:visible,textarea:visible').length > 0) {\n        let formData = window.growtype_quiz_global[quizId]['files'];\n        currentQuestion.find('input:visible,textarea:visible').each(function (index, element) {\n            if ($(element).attr('type') === 'file') {\n                let formKey = currentQuestionKey + '#_#' + index + '#_#' + $(element).attr('name');\n                let images = $(element)[0].files;\n\n                for (var x = 0; x < images.length; x++) {\n                    formData.append(formKey, images[x]);\n                }\n\n                window.growtype_quiz_global[quizId]['files'] = formData;\n            } else {\n                answers[currentQuestionKey].push({\n                    name: $(element).attr('name'),\n                    value: $(element).val()\n                });\n            }\n        })\n    }\n\n    /**\n     * Save unit system\n     */\n    if (currentQuestion.find('.unitsystem-selector-item.is-active:visible').length > 0) {\n        answers['unit_system'] = currentQuestion.find('.unitsystem-selector-item.is-active').attr('data-type');\n    }\n\n    /**\n     * Collect extra details\n     */\n    document.dispatchEvent(collectQuizDataEvent({\n        currentQuestion: currentQuestion,\n        answers: answers\n    }));\n\n    /**\n     * Save answers to session\n     */\n    sessionStorage.setItem('growtype_quiz_answers', JSON.stringify(answers));\n\n    getQuizData(quizId)['answers'] = answers;\n}\n","export function collectQuizDataEvent(params) {\n    return new CustomEvent(\"growtypeQuizCollectQuizData\", {\n        detail: params\n    });\n}\n","/**\n * Update bg image\n */\nexport function updateBgImage(answer) {\n    var imgUrl = answer.attr('data-img-url');\n\n    if (imgUrl.length > 0) {\n        let imageHolder = answer.closest('.growtype-quiz-question').find('.b-img .e-img')\n        let currentImgUrl = imageHolder.css('background-image').replace(/^url\\(['\"](.+)['\"]\\)/, '$1');\n\n        if (currentImgUrl !== imgUrl) {\n            imageHolder.fadeOut(100).promise().done(function () {\n                imageHolder.css({\n                    \"background-image\": \"url( \" + imgUrl + \" )\"\n                })\n                imageHolder.fadeIn(100);\n            })\n        }\n    }\n}\n","import {showNextQuestion} from \"../actions/question/showNextQuestion\";\nimport {collectQuizData} from \"../actions/crud/collectQuizData\";\nimport {validateQuestion} from \"../listeners/validation/validateQuestion\";\nimport {updateBgImage} from \"../actions/question/updateBgImage\";\n\nexport class answerTrigger {\n    clickInit(answer) {\n        let quizWrapper = answer.closest('.growtype-quiz-wrapper');\n        let quizId = quizWrapper.attr('id');\n\n        /**\n         * Prevent double click\n         */\n        if (window.growtype_quiz_global[quizId]['showNextQuestionWasFired']) {\n            return;\n        }\n\n        let currentQuestion = answer.closest('.growtype-quiz-question')\n        let answersLimit = currentQuestion.attr('data-answers-limit');\n        let answersAmount = currentQuestion.find('.growtype-quiz-question-answer.is-active').length;\n        let answerType = currentQuestion.attr('data-answer-type');\n\n        if (answer.attr('data-url').length > 0) {\n            window.location = answer.attr('data-url');\n            return;\n        }\n\n        if (answerType !== 'multiple' || answer.hasClass('clear-other-selections')) {\n            answer.closest('.growtype-quiz-question-answers').find('.growtype-quiz-question-answer').removeClass('is-active');\n        } else {\n            answer.closest('.growtype-quiz-question-answers').find('.growtype-quiz-question-answer.clear-other-selections').removeClass('is-active');\n        }\n\n        /**\n         * Hide additional answer input\n         */\n        answer.closest('.growtype-quiz-question-answers').find('.input-other').hide();\n\n        if (!answer.hasClass('is-active')) {\n            if (answersLimit > 0 && parseInt(answersAmount) === parseInt(answersLimit)) {\n                return;\n            }\n            answer.addClass('is-active');\n        } else {\n            if (answerType === 'multiple') {\n                answer.removeClass('is-active');\n            }\n        }\n\n        /**\n         * Other value input\n         */\n        if (answer.find('.input-other').length > 0) {\n            answer.find('.input-other').show().find('input,textarea').removeClass('is-invalid').focus();\n            quizWrapper.find('.growtype-quiz-nav .growtype-quiz-btn-go-next').show();\n            event.stopPropagation();\n            return;\n        }\n\n        if (\n            answerType === 'single_instant'\n            ||\n            answer.hasClass('clear-other-selections') && answer.find('.input-wrapper').length === 0\n        ) {\n            collectQuizData(currentQuestion);\n            showNextQuestion(currentQuestion);\n            return;\n        } else if (answerType === 'multiple') {\n            /**\n             * Validate question\n             */\n            validateQuestion(answer);\n        }\n    }\n\n    init(trigger = $('.growtype-quiz-question-answers .growtype-quiz-question-answer')) {\n        trigger.click(function () {\n            new answerTrigger().clickInit($(this));\n\n            if ($(this).attr('data-option-featured-img-main') === 'true') {\n                updateBgImage($(this));\n            }\n        });\n    }\n}\n","import {loaderFinishedEvent} from \"../../../events/loaderFinishedEvent\";\nimport {loaderStartedEvent} from \"../../../events/loaderStartedEvent\";\nimport {hideProgressIndicators} from \"../general\";\n\nexport function loader(quizWrapper) {\n    let visibleLoader = quizWrapper.find('.growtype-quiz-loader-wrapper:visible');\n\n    if (visibleLoader.length > 0) {\n        let count = 0;\n        let duration = visibleLoader.attr('data-duration');\n\n        /**\n         * Hide progress indicators\n         */\n        hideProgressIndicators(quizWrapper);\n\n        /**\n         * Reset\n         */\n        visibleLoader.find('.growtype-quiz-loader-bar-inner').css('width', '');\n\n        setTimeout(function () {\n            document.dispatchEvent(loaderStartedEvent({\n                'loader': visibleLoader,\n            }))\n            startLoader();\n        }, 500)\n\n        function startLoader() {\n            visibleLoader.find('.growtype-quiz-loader-bar-inner').css('width', count + '%');\n            visibleLoader.find('.growtype-quiz-loader-percentage').html(count + \"<span>%</span>\");\n            updateLoader();\n        }\n\n        function updateLoader() {\n            if (count < 100) {\n                count++;\n                setTimeout(startLoader, duration);\n            } else {\n                /**\n                 * Dispatch event\n                 */\n                document.dispatchEvent(loaderFinishedEvent({\n                    'loader': visibleLoader,\n                }))\n            }\n        }\n\n        function radialAnimate() {\n            visibleLoader.find('svg.radial-progress').each(function (index, value) {\n                $(this).find($('circle.bar--animated')).removeAttr('style');\n\n                var elementTop = $(this).offset().top;\n                var elementBottom = elementTop + $(this).outerHeight();\n                var viewportTop = $(window).scrollTop();\n                var viewportBottom = viewportTop + $(window).height();\n\n                if (elementBottom > viewportTop && elementTop < viewportBottom) {\n                    var percent = $(value).data('countervalue');\n                    var radius = $(this).find($('circle.bar--animated')).attr('r');\n                    var circumference = 2 * Math.PI * radius;\n                    var strokeDashOffset = circumference - ((percent * circumference) / 100);\n                    $(this).find($('circle.bar--animated')).animate({'stroke-dashoffset': strokeDashOffset}, duration * 100);\n                }\n            });\n        }\n\n        function checkIfInView() {\n            visibleLoader.find('.countervalue').each(function (element) {\n                if ($(this).hasClass('start')) {\n                    var elementTop = $(this).offset().top;\n                    var elementBottom = elementTop + $(this).outerHeight();\n\n                    var viewportTop = $(window).scrollTop();\n                    var viewportBottom = viewportTop + $(window).height();\n\n                    if (elementBottom > viewportTop && elementTop < viewportBottom) {\n                        $(this).removeClass('start');\n                        $(element).text();\n                        var myNumbers = $(this).text();\n                        if (myNumbers == Math.floor(myNumbers)) {\n                            $(this).animate({\n                                Counter: $(this).text()\n                            }, {\n                                duration: duration * 100,\n                                easing: 'swing',\n                                step: function (now) {\n                                    $(this).text(Math.ceil(now) + '%');\n                                }\n                            });\n                        } else {\n                            $(this).animate({\n                                Counter: $(this).text()\n                            }, {\n                                duration: duration * 100,\n                                easing: 'swing',\n                                step: function (now) {\n                                    $(this).text(now.toFixed(2) + '$');\n                                }\n                            });\n                        }\n\n                        radialAnimate();\n                    }\n                }\n            });\n        }\n\n        checkIfInView();\n    }\n}\n","export function loaderFinishedEvent(params) {\n    return new CustomEvent(\"growtypeQuizLoaderFinished\", {\n        detail: params\n    });\n}\n","export function loaderStartedEvent(params) {\n    return new CustomEvent(\"growtypeQuizLoaderStarted\", {\n        detail: params\n    });\n}\n","import {validateQuestion} from \"../listeners/validation/validateQuestion\";\n\nexport function input(quizWrapper) {\n    let quizId = quizWrapper.attr('id');\n\n    /**\n     * File\n     */\n    quizWrapper.find('.growtype-quiz-input-wrapper input[type=file]').change(function (e) {\n        let maxFileSize = $(this).attr('max-size');\n        let maxSizeErrorMessage = $(this).attr('max-size-error-message');\n        if (maxFileSize !== undefined) {\n            $(e.target.files).each(function (index, element) {\n                if (element.size > maxFileSize) {\n                    if (maxSizeErrorMessage.length > 0) {\n                        maxSizeErrorMessage = maxSizeErrorMessage.replace(':image_name', element.name).replace(':max_size', (maxFileSize / 1000000) + 'mb')\n                        alert(maxSizeErrorMessage)\n                    } else {\n                        alert(element.name + \" is too big! Max file size allowed - \" + (maxFileSize / 1000000) + 'mb')\n                    }\n                    e.target.value = \"\";\n                }\n            });\n        }\n\n        let selectedPlaceholderSingle = $(this).attr('data-selected-placeholder-single');\n        let selectedPlaceholderMultiple = $(this).attr('data-selected-placeholder-multiple');\n        let filesAmount = e.target.files.length;\n\n        $(this).closest('.growtype-quiz-input-wrapper')\n            .find('.growtype-quiz-input-label')\n            .removeClass('is-active')\n            .text($(this).attr('data-placeholder'))\n\n        if (filesAmount > 0 && (selectedPlaceholderSingle.length > 0 || selectedPlaceholderMultiple.length > 0)) {\n\n            let selectedPlaceholder = selectedPlaceholderSingle.replace(':nr', filesAmount)\n\n            if (filesAmount > 1) {\n                selectedPlaceholder = selectedPlaceholderMultiple.replace(':nr', filesAmount)\n            }\n\n            $(this).closest('.growtype-quiz-input-wrapper')\n                .find('.growtype-quiz-input-label')\n                .addClass('is-active')\n                .text(selectedPlaceholder)\n        }\n    });\n\n    quizWrapper.find('.growtype-quiz-input-wrapper input, .growtype-quiz-input-wrapper textarea').on('keyup', function () {\n        validateQuestion($(this));\n    });\n\n    quizWrapper.find('.growtype-quiz-input-wrapper input[type=\"checkbox\"]').on('click', function () {\n        validateQuestion($(this));\n    });\n}\n","import {updateProgressCounter} from \"../../actions/progress/counter/updateProgressCounter.js\";\nimport {updateQuestionsCounter} from \"../../actions/progress/counter/updateQuestionsCounter.js\";\nimport {updateProgressBar} from \"../../actions/progress/bar/updateProgressBar\";\nimport {saveQuizDataEvent} from \"../../events/saveQuizDataEvent\";\nimport {disabledValueIsIncluded, showProgressIndicators} from \"../../actions/progress/general\";\nimport {updateQuizComponents} from \"./updateQuizComponents\";\nimport {showSuccessQuestionEvent} from \"../../events/showSuccessQuestionEvent\";\nimport {showNextQuestionEvent} from \"../../events/showNextQuestionEvent\";\nimport {validateQuestion} from \"../../listeners/validation/validateQuestion\";\nimport {answerTrigger} from \"../../components/answerTrigger\";\nimport {loader} from \"../progress/loader/loader\";\nimport {showQuestionEvent} from \"../../events/showQuestionEvent\";\nimport {textareaCharactersCounter} from \"../../components/textareaCharactersCounter\";\nimport {input} from \"../../components/input\";\nimport {getQuizData} from \"../../helpers/getQuizData\";\n\n/**\n * Show next question\n * @param currentQuestion\n */\nexport function showNextQuestion(currentQuestion) {\n    let quizWrapper = currentQuestion.closest('.growtype-quiz-wrapper');\n    let quizId = quizWrapper.attr('id');\n\n    /**\n     * Prevent double click\n     */\n    if (window.growtype_quiz_global[quizId]['showNextQuestionWasFired']) {\n        return;\n    }\n\n    /**\n     * Check if answer has additional question, and show it\n     */\n    let additionalQuestionContent = '';\n    currentQuestion.find('.growtype-quiz-question-answer.is-active').map(function (index, element) {\n        if ($(element).attr('data-additional-question') === 'true' && !$(element).hasClass('skip-additional-question')) {\n            additionalQuestionContent = $(element).attr('data-additional-question-content');\n            return;\n        }\n    });\n\n    if (additionalQuestionContent.length > 0) {\n        quizWrapper.find('.growtype-quiz-modal .growtype-quiz-modal-content-form').html(additionalQuestionContent);\n        quizWrapper.find('.growtype-quiz-modal').fadeIn();\n        textareaCharactersCounter();\n        input();\n        return;\n    }\n\n    window.growtype_quiz_global[quizId]['showNextQuestionWasFired'] = true;\n\n    let nextFunnel = currentQuestion.find('.growtype-quiz-question-answer.is-active').attr('data-funnel');\n    let submitDelay = 0;\n\n    window.growtype_quiz_global[quizId]['current_funnel'] = nextFunnel;\n\n    /**\n     * If questions has multiple answers and funnels are enabled, adjust next question to follow answers funnels\n     */\n    if (currentQuestion.attr('data-answer-type') === 'multiple' && currentQuestion.attr('data-has-funnel') === 'true') {\n        let selectedFunnels = [];\n        let additionalQuestions = 0;\n        currentQuestion.find('.growtype-quiz-question-answer.is-active').map(function (index, element) {\n            if ($(element).attr('data-funnel') !== window.growtype_quiz_global[quizId]['initial_funnel']) {\n                selectedFunnels.push($(element).attr('data-funnel'))\n            }\n        })\n\n        if (selectedFunnels.length > 0) {\n            let funnelQuestionsGrouped = [];\n            selectedFunnels.map(function (funnelKey, funnelIndex) {\n                let funnelQuestions = currentQuestion.nextAll('.growtype-quiz-question[data-has-funnel=\"true\"][data-funnel-conditional=\"' + funnelKey + '\"]');\n\n                if (funnelQuestions.length !== 0) {\n                    additionalQuestions += funnelQuestions.length;\n\n                    funnelQuestions.map(function (funnelQuestionIndex, funnelQuestion) {\n                        let adjustedFunnelKey = funnelKey\n\n                        if (funnelQuestions.length === funnelQuestionIndex + 1) {\n                            if (selectedFunnels.length === funnelIndex + 1) {\n                                adjustedFunnelKey = window.growtype_quiz_global[quizId]['initial_funnel']\n\n                                console.info('Last same funnel conditional question has answer with next funnel - ' + adjustedFunnelKey)\n                            } else {\n                                adjustedFunnelKey = selectedFunnels[funnelIndex + 1]\n                            }\n                        }\n\n                        let clonedQuestion = $(funnelQuestion).clone().addClass('is-conditionally-cloned')\n                        $(funnelQuestion).addClass('is-conditionally-skipped')\n\n                        $(clonedQuestion).attr('data-funnel', funnelKey)\n                        $(clonedQuestion).find('.growtype-quiz-question-answer').attr('data-funnel', adjustedFunnelKey)\n\n                        /**\n                         * Init answer trigger\n                         */\n                        clonedQuestion.find('.growtype-quiz-question-answer').click(function () {\n                            new answerTrigger().clickInit($(this));\n                        });\n\n                        if (!funnelQuestionsGrouped[funnelKey]) {\n                            funnelQuestionsGrouped[funnelKey] = [clonedQuestion]\n                        } else {\n                            funnelQuestionsGrouped[funnelKey].push(clonedQuestion)\n                        }\n                    })\n                }\n            });\n\n            let funnelQuestionsGroupedOrdered = [];\n            Object.entries(funnelQuestionsGrouped).map(function (funnelQuestionsGroup) {\n                funnelQuestionsGroup[1].map(function (funnelQuestion) {\n                    funnelQuestionsGroupedOrdered.push(funnelQuestion)\n                })\n            })\n\n            if (funnelQuestionsGroupedOrdered.length > 0) {\n                nextFunnel = funnelQuestionsGroupedOrdered[0].attr('data-funnel');\n            }\n\n            funnelQuestionsGroupedOrdered.reverse();\n\n            funnelQuestionsGroupedOrdered.map(function (funnelQuestion) {\n                $(funnelQuestion).insertAfter(currentQuestion)\n            });\n        }\n\n        window.growtype_quiz_global[quizId]['additional_questions_amount'] = additionalQuestions;\n    }\n\n    if (nextFunnel === undefined) {\n        nextFunnel = window.growtype_quiz_global[quizId]['initial_funnel'];\n    }\n\n    let nextQuestion = currentQuestion.nextAll('.growtype-quiz-question[data-funnel=\"' + nextFunnel + '\"]:not([class*=\"skipped\"]):first');\n\n    /**\n     * Check if next question is disabled\n     */\n    if (nextQuestion.attr('data-disabled-if') && nextQuestion.attr('data-disabled-if').length > 0) {\n        let availableQuestions = currentQuestion.nextAll('.growtype-quiz-question[data-funnel=\"' + nextFunnel + '\"]:not([class*=\"skipped\"])');\n\n        for (var i = 0; i < availableQuestions.length; i++) {\n            let question = availableQuestions[i];\n            let disabledIf = $(question).attr('data-disabled-if')\n\n            if (disabledIf.length > 0) {\n                if (!disabledValueIsIncluded(quizWrapper, disabledIf)) {\n                    nextQuestion = $(question);\n                    console.warn('Question found among answers but ignored answers not found.')\n                    break;\n                } else {\n                    console.warn('Question key not found among answers')\n                }\n            } else {\n                nextQuestion = $(question);\n                console.warn('Next question \"Disabled If\" value is empty, so next question is taken.')\n                break;\n            }\n        }\n    }\n\n    window.growtype_quiz_global[quizId]['already_visited_questions_keys'].push(currentQuestion.attr('data-key'))\n    window.growtype_quiz_global[quizId]['already_visited_questions_funnels'].push(currentQuestion.attr('data-funnel'))\n\n    window.quizLastQuestion = currentQuestion;\n\n    if ($(currentQuestion).attr('data-question-type') !== 'info') {\n        window.growtype_quiz_global[quizId]['current_question_counter_nr']++;\n    }\n\n    window.growtype_quiz_global[quizId]['current_question_nr'] = nextQuestion.attr('data-question-nr');\n\n    /**\n     * Show correct answer\n     */\n    if (quizWrapper.find('.growtype-quiz').attr('data-show-correct-answer') && quizWrapper.find('.growtype-quiz').attr('data-correct-answers-trigger') === 'after_submit') {\n        submitDelay = 1000;\n        currentQuestion.find('.growtype-quiz-question-answer').map(function (index, element) {\n            if ($(element).attr('data-cor') !== '1') {\n                $(element).addClass('is-wrong')\n            } else {\n                $(element).addClass('is-correct')\n            }\n        });\n    }\n\n    let currentQuestionHeight = $(currentQuestion).height();\n\n    /**\n     * Show next question\n     */\n    currentQuestion.delay(submitDelay).removeClass('is-active').not('.is-always-visible').fadeOut(300, function () {\n        quizWrapper.removeClass('is-valid is-half-valid');\n    }).promise().done(function () {\n\n        showProgressIndicators(quizWrapper);\n\n        /**\n         * Check if success page event was fired and quiz is finished\n         */\n        if (window.growtype_quiz_global[quizId]['is_finished']) {\n            return;\n        }\n\n        /**\n         * Update next btn label\n         */\n        let finishLabel = quizWrapper.find('.growtype-quiz-nav .growtype-quiz-btn-go-next .e-label').attr('data-label-finish');\n\n        if (finishLabel && finishLabel.length > 0 && (nextQuestion.next('.growtype-quiz-question') === undefined || nextQuestion.attr('data-question-type') === 'success')) {\n            quizWrapper.find('.growtype-quiz-nav .growtype-quiz-btn-go-next .e-label').text(finishLabel);\n        } else if (parseInt(window.growtype_quiz_global[quizId]['current_question_counter_nr']) <= window.growtype_quiz_global[quizId]['quiz_questions_amount'] - 1) {\n            let nextLabel = quizWrapper.find('.growtype-quiz-nav .growtype-quiz-btn-go-next .e-label').attr('data-label');\n\n            if (quizWrapper.find('.growtype-quiz-nav[data-type=\"footer\"]').attr('data-question-title-nav') === 'true') {\n                let nextQuestionTitle = nextQuestion.nextAll('.growtype-quiz-question:first').attr('data-question-title');\n\n                if (nextQuestion.nextAll('.growtype-quiz-question[data-funnel=\"' + nextFunnel + '\"]:first').length > 0) {\n                    nextQuestionTitle = nextQuestion.nextAll('.growtype-quiz-question[data-funnel=\"' + nextFunnel + '\"]:first').attr('data-question-title');\n                }\n\n                if (nextQuestionTitle && nextQuestionTitle.length > 0) {\n                    nextLabel = nextQuestionTitle;\n                }\n            }\n\n            quizWrapper.find('.growtype-quiz-nav .growtype-quiz-btn-go-next .e-label').attr('data-label', nextLabel).text(nextLabel);\n        }\n\n        /**\n         * Update components\n         */\n        if (nextQuestion.length > 0) {\n            nextQuestion.addClass('is-active').fadeIn(300).promise().done(function () {\n                updateQuestionsCounter(quizWrapper, nextQuestion);\n                updateProgressCounter(quizWrapper);\n                updateProgressBar(quizWrapper);\n\n                /**\n                 * Validate question if it was filled already\n                 */\n                if (nextQuestion.find('input').val() !== undefined && nextQuestion.find('input').val().length > 0) {\n                    validateQuestion($(this));\n                }\n\n                quizWrapper.find('.growtype-quiz-nav .btn').attr('disabled', false);\n            });\n        }\n\n        updateQuizComponents(nextQuestion);\n\n        loader(quizWrapper);\n\n        /**\n         * Show question general event\n         */\n        document.dispatchEvent(showQuestionEvent({\n            currentQuestion: nextQuestion, previousQuestion: currentQuestion, answer_details: {\n                'question_number': window.growtype_quiz_global[quizId]['current_question_counter_nr'] - 1,\n                'question': $(currentQuestion).attr('data-key'),\n                'answer': window.growtype_quiz_data[quizId]['answers'][$(currentQuestion).attr('data-key')],\n            }\n        }));\n\n        if (currentQuestionHeight > $(window).height()) {\n            $([document.documentElement, document.body]).animate({\n                scrollTop: $(\".growtype-quiz\").offset().top\n            }, 100);\n        }\n\n        if (nextQuestion.length === 0 || nextQuestion.attr('data-question-type') === 'success') {\n\n            /**\n             * Save quiz data event\n             */\n            document.dispatchEvent(saveQuizDataEvent(getQuizData(quizId)));\n\n            /**\n             * Show success question event\n             */\n            document.dispatchEvent(showSuccessQuestionEvent({\n                currentQuestion: currentQuestion,\n                nextQuestion: nextQuestion\n            }));\n        } else {\n            /**\n             * Show next question event\n             */\n            document.dispatchEvent(showNextQuestionEvent({\n                currentQuestion: currentQuestion,\n                nextQuestion: nextQuestion\n            }));\n        }\n\n        window.growtype_quiz_global[quizId]['showNextQuestionWasFired'] = false;\n    });\n}\n","export function textareaCharactersCounter() {\n    let charactersLimit = $('.growtype-quiz-modal textarea').attr('maxlength');\n\n    if (charactersLimit) {\n        $('.growtype-quiz-modal .e-characters-amount .e-total').text(charactersLimit);\n\n        $('.growtype-quiz-modal textarea[name=\"additional_question\"]').on('input', function () {\n            let charactersAmount = $('.growtype-quiz-modal textarea[name=\"additional_question\"]').val().length;\n            $('.growtype-quiz-modal .e-characters-amount .e-amount').text(charactersAmount);\n        });\n    }\n}\n","export function showNextQuestionEvent(params) {\n    return new CustomEvent(\"growtypeQuizShowNextQuestion\", {\n        detail: params\n    });\n}\n","import {showNextQuestion} from './../actions/question/showNextQuestion';\nimport {validateQuestionEvent} from './../events/validateQuestionEvent';\nimport {collectQuizData} from \"../actions/crud/collectQuizData\";\nimport {nextQuestionTriggerEvent} from \"../events/nextQuestionTriggerEvent\";\n\nexport function nextQuestionTrigger(quizWrapper) {\n    let quizId = quizWrapper.attr('id');\n    let defaultInitialQuestion = quizWrapper.find('.growtype-quiz-question.first-question');\n\n    quizWrapper.find('.growtype-quiz-btn-go-next').click(function () {\n        let currentQuestion = $(this).closest('.growtype-quiz').find('.growtype-quiz-question.is-active');\n\n        console.log('testas')\n\n        /**\n         * Show next question event\n         */\n        document.dispatchEvent(nextQuestionTriggerEvent({\n            currentQuestion: currentQuestion,\n        }));\n\n        /**\n         * Prevent execution\n         */\n        if (window.growtype_quiz_global[quizId]['showNextQuestionWasFired']) {\n            return;\n        }\n\n        if (currentQuestion.length === 0) {\n            currentQuestion = defaultInitialQuestion;\n        }\n\n        let isValidQuestion = currentQuestion.attr('data-answer-required') === 'false';\n\n        if (!isValidQuestion) {\n            document.dispatchEvent(validateQuestionEvent({\n                currentQuestion: currentQuestion,\n            }))\n\n            if (!window.growtype_quiz_global[quizId]['is_valid']) {\n                return\n            }\n        }\n\n        quizWrapper.find('.growtype-quiz-nav .btn').attr('disabled', true)\n\n        /**\n         * Colect answers for existing questions\n         */\n        if (quizWrapper.find('.growtype-quiz-question.is-always-visible').length > 0) {\n            quizWrapper.find('.growtype-quiz-question.is-always-visible').each(function (index, element) {\n                collectQuizData($(element));\n            });\n        }\n\n        /**\n         *\n         */\n        collectQuizData(currentQuestion);\n\n        /**\n         *\n         */\n        showNextQuestion(currentQuestion);\n    });\n}\n","export function nextQuestionTriggerEvent(params) {\n    return new CustomEvent(\"growtypeQuizNextQuestionTrigger\", {\n        detail: params\n    });\n}\n","export function validateQuestionEvent(params) {\n    return new CustomEvent(\"growtypeQuizValidateQuestion\", {\n        detail: params\n    });\n}\n","import {updateProgressCounter} from \"../../actions/progress/counter/updateProgressCounter.js\";\nimport {updateProgressBar} from \"../../actions/progress/bar/updateProgressBar\";\nimport {updateQuestionsCounter} from \"../progress/counter/updateQuestionsCounter\";\nimport {getQuizData} from \"../../helpers/getQuizData\";\nimport {updateQuizComponents} from \"./updateQuizComponents\";\nimport {showQuestionEvent} from \"../../events/showQuestionEvent\";\n\n/**\n * Show next slide\n */\nexport function showPreviousQuestion(quizWrapper) {\n    let quizId = quizWrapper.attr('id');\n    let currentQuestion = quizWrapper.find('.growtype-quiz-question.is-active');\n    let lastVisitedQuestionKey = window.growtype_quiz_global[quizId]['already_visited_questions_keys'].slice(-1)[0];\n    let lastVisitedQuestionFunnel = window.growtype_quiz_global[quizId]['already_visited_questions_funnels'].slice(-1)[0];\n    let previousQuestion = currentQuestion.prevAll(\".growtype-quiz-question[data-key='\" + lastVisitedQuestionKey + \"'][data-funnel='\" + lastVisitedQuestionFunnel + \"']:first\");\n\n    if (previousQuestion.attr('data-answer-type') === 'multiple' && previousQuestion.attr('data-has-funnel') === 'true') {\n        window.growtype_quiz_global[quizId]['additional_questions_amount'] = 0;\n        quizWrapper.find('.growtype-quiz-question.is-conditionally-cloned').remove();\n        quizWrapper.find('.growtype-quiz-question.is-conditionally-skipped').removeClass('is-conditionally-skipped');\n    }\n\n    /**\n     * If active class doesn't exist, get last question\n     */\n    if (currentQuestion.length === 0) {\n        previousQuestion = quizWrapper.find('.growtype-quiz-question:last');\n    }\n\n    /**\n     * Skip loader\n     */\n    if (previousQuestion.find('.growtype-quiz-loader-wrapper').length > 0) {\n        previousQuestion = previousQuestion.prev()\n    }\n\n    window.growtype_quiz_global[quizId]['already_visited_questions_keys'].splice(-1)\n    window.growtype_quiz_global[quizId]['already_visited_questions_funnels'].splice(-1)\n\n    Object.entries(getQuizData(quizId)['answers']).map(function (answer, key) {\n        if (answer[0].includes(lastVisitedQuestionKey)) {\n            delete getQuizData(quizId)['answers'][answer[0]]\n        }\n    });\n\n    sessionStorage.setItem('growtype_quiz_answers', JSON.stringify(getQuizData(quizId)['answers']));\n\n    window.quizLastQuestion = currentQuestion;\n    window.growtype_quiz_global[quizId]['current_question_nr'] = previousQuestion.attr('data-question-nr');\n\n    if (previousQuestion.attr('data-question-type') !== 'info') {\n        window.growtype_quiz_global[quizId]['current_question_counter_nr']--;\n    }\n\n    if (currentQuestion.length === 0) {\n        initQuestion(previousQuestion, previousQuestion)\n    } else {\n        currentQuestion.removeClass('is-active').fadeOut(300, function () {\n            quizWrapper.addClass('is-valid');\n\n            window.growtype_quiz_global[quizId]['is_finished'] = false;\n\n            initQuestion(currentQuestion, previousQuestion)\n        });\n    }\n}\n\n/**\n * @param currentQuestion\n * @param previousQuestion\n */\nfunction initQuestion(currentQuestion, previousQuestion) {\n    let quizWrapper = currentQuestion.closest('.growtype-quiz-wrapper');\n    let quizId = quizWrapper.attr('id');\n\n    updateQuestionsCounter(quizWrapper);\n    updateProgressCounter(quizWrapper);\n    updateProgressBar(quizWrapper);\n\n    quizWrapper.find('.growtype-quiz-btn-go-next').show().attr('disabled', false);\n\n    let nextLabel = quizWrapper.find('.growtype-quiz-nav .growtype-quiz-btn-go-next .e-label').attr('data-label');\n\n    if (previousQuestion.hasClass('first-question')) {\n        nextLabel = quizWrapper.find('.growtype-quiz-nav .growtype-quiz-btn-go-next .e-label').attr('data-label-start');\n    }\n\n    /**\n     * Remove skip additional question class\n     */\n    previousQuestion.find('.growtype-quiz-question-answer.is-active').removeClass('skip-additional-question');\n\n    let nextQuestionTitle = currentQuestion.attr('data-question-title');\n\n    if (quizWrapper.find('.growtype-quiz-nav[data-type=\"footer\"]').attr('data-question-title-nav') === 'true' && nextQuestionTitle && nextQuestionTitle.length > 0) {\n        nextLabel = nextQuestionTitle;\n    }\n\n    updateQuizComponents(previousQuestion);\n\n    /**\n     * Reset next label\n     */\n    previousQuestion.closest('.growtype-quiz').find('.growtype-quiz-nav .growtype-quiz-btn-go-next .e-label').text(nextLabel);\n\n    previousQuestion.addClass('is-active').fadeIn(300).promise().done(function () {\n        window.growtype_quiz_global[quizId]['quiz_back_btn_was_clicked'] = false;\n    });\n\n    // console.log(previousQuestion,'previousQuestion')\n    //\n    // $([document.documentElement, document.body]).animate({\n    //     scrollTop: $(\".growtype-quiz\").offset().top\n    // }, 100);\n\n    /**\n     * Show question general event\n     */\n    document.dispatchEvent(showQuestionEvent({\n        currentQuestion: previousQuestion,\n        nextQuestion: currentQuestion,\n    }));\n}\n","import {showPreviousQuestion} from \"../actions/question/showPreviousQuestion\";\n\nexport function previousQuestionTrigger(quizWrapper) {\n    let quizId = quizWrapper.attr('id');\n\n    quizWrapper.find('.growtype-quiz-btn-go-back').click(function () {\n        event.preventDefault();\n\n        if (window.growtype_quiz_global[quizId]['quiz_back_btn_was_clicked']) {\n            return false;\n        }\n\n        window.growtype_quiz_global[quizId]['quiz_back_btn_was_clicked'] = true;\n\n        if (window.growtype_quiz_global[quizId]['already_visited_questions_keys'].length === 0 && $(this).attr('data-back-url')) {\n            return window.location.href = $(this).attr('data-back-url');\n        }\n\n        showPreviousQuestion(quizWrapper)\n    });\n}\n","import {updateGlobalStorageKey} from \"../state/updateStorage\";\n\nexport function unitSystem(quizWrapper) {\n    let quizId = quizWrapper.attr('id');\n\n    quizWrapper.find('.unitsystem-selector').each(function (index, element) {\n        if (index > 1) {\n            $(element).hide();\n        }\n\n        if (index === 0) {\n            updateGlobalUnitSystem($(element).find('.unitsystem-selector-item.is-active'));\n            updateUnitSystemSelector($(element).find('.unitsystem-selector-item.is-active'))\n            updateUnitSystemSelectors($(element).find('.unitsystem-selector-item.is-active'))\n        }\n    });\n\n    quizWrapper.find('.unitsystem-selector .unitsystem-selector-item').click(function () {\n        updateGlobalUnitSystem($(this));\n        updateUnitSystemSelector($(this))\n        updateUnitSystemSelectors($(this))\n    });\n\n    function updateGlobalUnitSystem(selector) {\n        let unitSystem = selector.attr('data-type');\n        updateGlobalStorageKey('unit_system', unitSystem);\n        window.growtype_quiz_global[quizId]['unit_system'] = unitSystem;\n    }\n\n    function updateUnitSystemSelector(selector) {\n        selector.closest('.growtype-quiz-measurements-form').find('.unitsystem-selector-item').removeClass('is-active');\n        selector.closest('.growtype-quiz-measurements-form').find('.unitsystem-selector-item[data-type=\"' + window.growtype_quiz_global[quizId]['unit_system'] + '\"]').addClass('is-active');\n\n        selector.closest('.growtype-quiz-measurements-form').find('.unitsystem-group').removeClass('is-active');\n        selector.closest('.growtype-quiz-measurements-form').find('.unitsystem-group[data-type=\"' + window.growtype_quiz_global[quizId]['unit_system'] + '\"]').addClass('is-active');\n    }\n\n    function updateUnitSystemSelectors(selector) {\n        let unitSystem = selector.attr('data-type');\n\n        let currentQuestion = selector.closest('.growtype-quiz-question');\n\n        currentQuestion.find('.unitsystem-selector .unitsystem-selector-item').each(function (index, element) {\n            if ($(element).attr('data-type') === unitSystem) {\n                updateUnitSystemSelector($(element))\n            }\n        });\n\n        let nextQuestions = selector.closest('.growtype-quiz-question').nextAll();\n\n        nextQuestions.each(function (index, element) {\n            if ($(element).find('.unitsystem-selector').length > 0) {\n                $(element).find('.unitsystem-selector').hide();\n                $(element).find('.unitsystem-selector .unitsystem-selector-item').each(function (index, element) {\n                    if ($(element).attr('data-type') === unitSystem) {\n                        updateUnitSystemSelector($(element))\n                    }\n                });\n            }\n        });\n    }\n}\n","export function updateGlobalStorageKey(key, value) {\n    let existingStorage = JSON.parse(sessionStorage.getItem(quizGlobalStorageKey));\n    existingStorage = existingStorage === null ? {} : existingStorage;\n    existingStorage[key] = value;\n    sessionStorage.setItem(quizGlobalStorageKey, JSON.stringify(existingStorage));\n}\n","/**\n * Calculate duration\n */\nlet initialDate = new Date();\n\nexport function duration(quizWrapper) {\n    let quizId = quizWrapper.attr('id');\n\n    if (quizWrapper.attr('data-quiz-type') === 'presentation') {\n        return false;\n    }\n\n    setInterval(function () {\n        let currentDate = new Date();\n        let durationInMilliseconds = currentDate - initialDate;\n        window.growtype_quiz_global[quizId]['duration'] = (durationInMilliseconds / 1000).toFixed(0);\n    }, 1000);\n}\n","import {showLastQuestion} from \"../actions/question/showLastQuestion\";\nimport {prepareSubmitFormData} from \"../actions/question/prepareSubmitFormData\";\n\n/**\n * Save quiz data\n */\ndocument.addEventListener('growtypeQuizSaveQuizData', saveQuizDataListener)\n\nfunction saveQuizDataListener(data) {\n    let quizId = data['detail']['id'];\n    let quizWrapper = $('.growtype-quiz-wrapper[id=\"' + quizId + '\"]');\n\n    if (!quizWrapper.find('.growtype-quiz').attr('data-save-answers')) {\n        return false;\n    }\n\n    const answers = data.detail.answers && Object.entries(data.detail.answers).length > 0 ? data.detail.answers : null;\n    const extraDetails = data.detail.extra_details && Object.entries(data.detail.extra_details).length > 0 ? data.detail.extra_details : null;\n    const showLastQuestionOnError = false;\n\n    let formData = prepareSubmitFormData(answers, extraDetails)\n\n    /**\n     * Save extra data to answers\n     */\n    $.ajax({\n        url: growtype_quiz_local.ajax_url,\n        type: \"post\",\n        processData: false,\n        contentType: false,\n        cache: false,\n        enctype: 'multipart/form-data',\n        data: formData,\n        beforeSend: function () {\n        },\n        success: function (data) {\n            if (data.success) {\n                /**\n                 * Save data to local storage\n                 */\n                localStorage.setItem(\"growtype_quiz_unique_hash\", data.unique_hash);\n\n                /**\n                 * Set unique hash if input exists\n                 */\n                if (quizWrapper.find('input[name=\"growtype_quiz_unique_hash\"]').length > 0) {\n                    quizWrapper.find('input[name=\"growtype_quiz_unique_hash\"]').val(data.unique_hash);\n                }\n\n                /**\n                 * Save data to local storage\n                 */\n                localStorage.setItem(\"growtype_quiz_answers\", JSON.stringify(answers));\n\n                /**\n                 * Redirect url\n                 */\n                let redirectUrl = data.redirect_url !== null && data.redirect_url.length > 0 ? data.redirect_url : data.results_url;\n\n                /**\n                 * Update loader\n                 */\n                setTimeout(function () {\n                    if (quizWrapper.find('.growtype-quiz-loader-wrapper:visible').length > 0) {\n                        if (redirectUrl !== null && redirectUrl.length > 0) {\n                            if (quizWrapper.find('.growtype-quiz-loader-wrapper').attr('data-redirect-url').length === 0) {\n                                quizWrapper.find('.growtype-quiz-loader-wrapper').attr('data-redirect-url', redirectUrl);\n                            }\n\n                            quizWrapper.find('.growtype-quiz-loader-wrapper .btn-continue').attr('href', redirectUrl);\n                        }\n                    } else {\n                        if (redirectUrl !== null && redirectUrl.length > 0) {\n                            window.location.replace(data.redirect_url);\n                        }\n                    }\n                }, 500)\n            } else {\n                if (showLastQuestionOnError) {\n                    showLastQuestion(answers);\n                }\n            }\n        },\n        error: function (data) {\n            /**\n             * Set quiz as not finished\n             * @type {boolean}\n             */\n            window.growtype_quiz_global[quizId]['is_finished'] = false;\n\n            if (showLastQuestionOnError) {\n                showLastQuestion(answers, false);\n            } else if (data['responseJSON'] && data['responseJSON']['message'] !== undefined) {\n                console.error(data['responseJSON']['message']);\n            }\n\n            if (quizWrapper.find('.growtype-quiz-question.is-active').attr('data-hide-back-button') !== 'true') {\n                quizWrapper.find('.growtype-quiz-wrapper .growtype-quiz-btn-go-back').attr('disabled', false).fadeIn();\n            }\n        }\n    })\n}\n\n","export function prepareSubmitFormData(answers, extraDetails = null) {\n    const quizWrapper = $('.growtype-quiz-wrapper');\n    const quizId = quizWrapper.attr('id');\n    const quizPostId = quizWrapper.attr('data-quiz-post-id');\n    const quizSlug = quizWrapper.attr('data-quiz-slug');\n    const duration = window.growtype_quiz_global[quizId]?.duration ?? null;\n    const rawFiles = window.growtype_quiz_global[quizId]?.files ?? [];\n\n    // Ensure files is always an array or a FileList\n    const files = rawFiles instanceof FileList ? rawFiles : (Array.isArray(rawFiles) ? rawFiles : []);\n\n    let formData = new FormData();\n    formData.append(\"action\", \"growtype_quiz_save_data\");\n    formData.append(\"answers\", JSON.stringify(answers));\n\n    if (extraDetails) {\n        formData.append(\"extra_details\", JSON.stringify(extraDetails));\n    }\n\n    formData.append(\"quiz_id\", quizPostId);\n    formData.append(\"quiz_slug\", quizSlug);\n    formData.append(\"duration\", duration);\n    formData.append(\"unique_hash\", window.growtype_quiz_local?.unique_hash ?? '');\n\n    let existingToken = window.growtype_quiz_local?.token || localStorage.growtype_quiz_unique_hash || null;\n    if (existingToken) {\n        formData.append(\"token\", existingToken);\n    }\n\n    // Append files safely\n    if (files.length > 0) {\n        for (let i = 0; i < files.length; i++) {\n            formData.append(`file_${i}`, files[i]);\n        }\n    }\n\n    return formData;\n}\n","let answersEvaluated = new Event('growtypeQuizResultsEvaluated');\n\nexport function resultsEvaluatedEvent() {\n    return answersEvaluated;\n}\n","import {showFirstQuestion} from \"../actions/question/showFirstQuestion\";\n\nexport function restartQuizTrigger(quizWrapper) {\n    quizWrapper.find('.growtype-quiz .btn-restart-quiz').click(function (event) {\n        let quizId = quizWrapper.attr('id');\n\n        event.preventDefault();\n\n        window.growtype_quiz_global[quizId]['is_finished'] = false;\n        window.growtype_quiz_global[quizId]['was_restarted'] = true;\n\n        /**\n         * Show correct answers\n         */\n        if (quizWrapper.find('.growtype-quiz').attr('data-show-correct-answer') && quizWrapper.find('.growtype-quiz').attr('data-correct-answers-trigger') === 'on_restart') {\n            quizWrapper.find('.growtype-quiz-question').map(function (index, element) {\n                $(element).find('.growtype-quiz-question-answer').map(function (index, element) {\n                    if ($(element).attr('data-cor') !== '1') {\n                        $(element).addClass('is-wrong')\n                    } else {\n                        $(element).addClass('is-correct')\n                    }\n                });\n            })\n        }\n\n        quizWrapper.find('.growtype-quiz-nav .btn').attr('disabled', false)\n\n        showFirstQuestion(quizWrapper);\n    });\n}\n","import {showProgressIndicators} from \"../../actions/progress/general\";\nimport {updateProgressCounter} from \"../progress/counter/updateProgressCounter\";\nimport {updateQuizComponents} from \"./updateQuizComponents\";\n\n/**\n * Show last slide\n */\nexport function showFirstQuestion(quizWrapper) {\n    let quizId = quizWrapper.attr('id');\n    let firstQuestion = quizWrapper.find('.growtype-quiz-question.first-question');\n\n    if (firstQuestion.hasClass('is-always-visible')) {\n        firstQuestion = quizWrapper.find('.growtype-quiz-question:not(.is-always-visible):first');\n    }\n\n    updateQuizComponents(firstQuestion);\n\n    /**\n     * Set nav next arrow label\n     */\n    setTimeout(function () {\n        let nextQuestionTitle = quizWrapper.find('.growtype-quiz-nav .growtype-quiz-btn-go-next .e-label').attr('data-label-start');\n\n        if (nextQuestionTitle !== undefined && nextQuestionTitle.length > 0) {\n            if (quizWrapper.find('.growtype-quiz-nav[data-type=\"footer\"]').attr('data-question-title-nav') === 'true') {\n                nextQuestionTitle = firstQuestion.nextAll('.growtype-quiz-question:first').attr('data-question-title');\n                quizWrapper.find('.growtype-quiz-nav .growtype-quiz-btn-go-next .e-label').attr('data-label', nextQuestionTitle).text(nextQuestionTitle)\n            } else {\n                quizWrapper.find('.growtype-quiz-nav .growtype-quiz-btn-go-next .e-label').text(nextQuestionTitle)\n            }\n        }\n    }, 500)\n\n    if (!firstQuestion.hasClass('is-active')) {\n        quizWrapper.find('.growtype-quiz-question').removeClass('is-active').fadeOut().promise().done(function () {\n            let quizWrapper = $(this).closest('.growtype-quiz-wrapper');\n\n            window.growtype_quiz_global[quizId]['current_question_nr'] = 1;\n            window.growtype_quiz_global[quizId]['current_question_counter_nr'] = 1;\n\n            updateProgressCounter(quizWrapper);\n\n            firstQuestion.addClass('is-active').fadeIn();\n\n            showProgressIndicators(quizWrapper);\n\n            quizWrapper.find('.growtype-quiz-btn-go-next').show();\n        });\n    }\n}\n","import {evaluateQuizData} from \"../actions/crud/evaluateQuizData\";\nimport {restartQuizTrigger} from \"../components/restartQuizTrigger\";\n\n/**\n * Show success question\n */\ndocument.addEventListener('growtypeQuizShowSuccessQuestion', showSuccessQuestionListener)\n\nfunction showSuccessQuestionListener(params) {\n    let quizWrapper = $(params['detail']['currentQuestion']).closest('.growtype-quiz-wrapper');\n    let quizId = quizWrapper.attr('id');\n\n    /**\n     * Check if success page event was fired and quiz is finished\n     */\n    evaluateQuizData(quizWrapper);\n\n    let question = quizWrapper.find('.growtype-quiz-question');\n\n    if (params.detail && params.detail.currentQuestion) {\n        question = $(params.detail.currentQuestion);\n    }\n\n    question\n        .removeClass('is-active')\n        .hide()\n        .promise()\n        .done(function () {\n            $('body').attr('data-current-question-type', 'success')\n            quizWrapper.find('.growtype-quiz-question[data-question-type=\"success\"]').fadeIn().addClass('is-active');\n\n            restartQuizTrigger(quizWrapper);\n        });\n}\n","import {getQuizData} from \"../../helpers/getQuizData\";\nimport {resultsEvaluatedEvent} from \"../../events/resultsEvaluatedEvent\";\n\nexport function evaluateQuizData(quizWrapper) {\n    let quizId = quizWrapper.attr('id');\n\n    let results = {\n        'answers': getQuizData(quizId)['answers'],\n        'correctlyAnswered': typeof getQuizData(quizId)['correctly_answered'] !== 'undefined' ? getQuizData(quizId)['correctly_answered'] : 0,\n        'totalAnswers': typeof getQuizData(quizId)['correctly_answered'] !== 'undefined' ? Object.values(getQuizData(quizId)['correctly_answered']).length : 0,\n        'correctAnswers': 0\n    }\n\n    Object.values(results['correctlyAnswered']).map(function (element, index) {\n        if (element[0]) {\n            results['correctAnswers']++;\n        }\n    });\n\n    results['correctAnswersFormatted'] = results['correctAnswers'];\n\n    if (Object.values(results['correctlyAnswered']).length >= 10 && results['correctAnswers'].length < 10) {\n        results['correctAnswersFormatted'] = '0' + results['correctAnswers'];\n    }\n\n    let correctAnswersResultFormatted = results['correctAnswersFormatted'] + '/' + results['totalAnswers'];\n\n    if (quizWrapper.find('.growtype-quiz-question[data-question-type=\"success\"] .e-result').length > 0) {\n        quizWrapper.find('.growtype-quiz-question[data-question-type=\"success\"] .e-result').text(correctAnswersResultFormatted);\n    }\n\n    /**\n     * Include results to event\n     */\n    resultsEvaluatedEvent().results = results;\n\n    document.dispatchEvent(resultsEvaluatedEvent());\n}\n","/**\n * Init listener\n */\nimport {showNextQuestion} from \"../actions/question/showNextQuestion\";\n\ndocument.addEventListener('growtypeQuizLoaderFinished', loaderFinishedListener)\n\nfunction loaderFinishedListener(params) {\n    let quizLoaderWrapper = params['detail']['loader'];\n    let redirect = quizLoaderWrapper.attr('data-redirect');\n    let redirectUrl = quizLoaderWrapper.attr('data-redirect-url');\n    let quizWrapper = quizLoaderWrapper.closest('.growtype-quiz-wrapper');\n\n    quizWrapper.addClass('is-valid');\n\n    /**\n     * Show continue button\n     */\n    if (redirect === 'true' && redirectUrl !== null && redirectUrl.length > 0) {\n        window.location.href = redirectUrl;\n    } else {\n        if (quizWrapper.find('.growtype-quiz-question.is-active').next('.growtype-quiz-question').length > 0) {\n            showNextQuestion(quizWrapper.find('.growtype-quiz-question.is-active'));\n        } else {\n            quizWrapper.find('.btn-continue').fadeIn();\n        }\n    }\n}\n","import {getQuizData} from \"./helpers/getQuizData\";\nimport {saveQuizDataEvent} from \"./events/saveQuizDataEvent\";\nimport {showInitialQuestion} from './actions/question/showInitialQuestion.js';\nimport {nextQuestionTrigger} from './components/nextQuestionTrigger.js';\nimport {previousQuestionTrigger} from './components/previousQuestionTrigger.js';\nimport {answerTrigger} from './components/answerTrigger.js';\nimport {input} from './components/input.js';\nimport {unitSystem} from './components/unitSystem.js';\nimport {modal} from './components/modal.js';\nimport {updateProgressBar} from \"./actions/progress/bar/updateProgressBar\";\nimport {updateQuestionsCounter} from \"./actions/progress/counter/updateQuestionsCounter\";\nimport {updateProgressCounter} from \"./actions/progress/counter/updateProgressCounter\";\nimport {countDownTimer} from \"./actions/progress/timer/countDownTimer\";\nimport {duration} from \"./actions/progress/timer/duration\";\n\nimport \"./listeners/saveQuizDataListener\";\nimport \"./listeners/showSuccessQuestionListener\";\nimport \"./listeners/loaderFinishedListener\";\nimport \"./listeners/validation/validateQuestion\";\n\n/**\n * Prevent double click\n */\n$(document).ready(function () {\n    if (window.growtype_quiz_global) {\n        $('.growtype-quiz-wrapper').map(function (index, element) {\n            /**\n             * Set params\n             */\n            growtypeQuizSetParams($(element));\n        });\n\n        $('.growtype-quiz-wrapper').map(function (index, element) {\n            let quizId = $(element).attr('id');\n\n            window.growtype_quiz_global[quizId]['showNextQuestionWasFired'] = false;\n\n            if ($(element).find('.growtype-quiz').attr('data-save-on-load')) {\n                document.dispatchEvent(saveQuizDataEvent(getQuizData(quizId)));\n            }\n\n            new answerTrigger().init();\n\n            input($(element));\n            unitSystem($(element));\n            showInitialQuestion($(element));\n            nextQuestionTrigger($(element));\n            modal($(element));\n            previousQuestionTrigger($(element));\n            updateQuestionsCounter($(element));\n            updateProgressBar($(element));\n            updateProgressCounter($(element));\n            duration($(element));\n            countDownTimer($(element));\n        });\n    }\n});\n","import {updateQuizComponents} from \"./updateQuizComponents\";\nimport {showQuestionEvent} from \"../../events/showQuestionEvent\";\n\n/**\n * Show last slide\n */\nexport function showInitialQuestion(quizWrapper) {\n    if (quizWrapper.length === 0) {\n        return;\n    }\n\n    let quizId = quizWrapper.attr('id');\n    let questionNr = quizWrapper.find('.growtype-quiz').find('.growtype-quiz-question').not(\".is-always-visible\").first().attr('data-question-nr');\n\n    if (questionNr === undefined) {\n        questionNr = 1;\n    }\n\n    if (quizWrapper.find('.growtype-quiz').attr('data-show-question-nr-in-url')) {\n        questionNr = new URLSearchParams(window.location.search).get('question');\n        questionNr = quizWrapper.find('.growtype-quiz').attr('data-show-question-nr-in-url') && questionNr !== 'undefined' ? parseInt(questionNr) : 1;\n        questionNr = !isNaN(questionNr) ? questionNr : 1;\n\n        window.growtype_quiz_global[quizId]['current_question_counter_nr'] = questionNr;\n    }\n\n    let question = quizWrapper.find('.growtype-quiz-question[data-question-nr=\"' + questionNr + '\"]');\n\n    if (questionNr > 1) {\n        quizWrapper.find('.growtype-quiz-question').hide();\n    }\n\n    window.growtype_quiz_global[quizId]['current_question_nr'] = questionNr;\n\n    question.addClass('is-active').show();\n\n    /**\n     * Set nav next arrow label\n     */\n    if (quizWrapper.find('.growtype-quiz-nav[data-type=\"footer\"]').attr('data-question-title-nav') === 'true') {\n        setTimeout(function () {\n            let nextQuestionTitle = question.nextAll('.growtype-quiz-question:first').attr('data-question-title');\n            if (nextQuestionTitle) {\n                quizWrapper.find('.growtype-quiz-nav .growtype-quiz-btn-go-next .e-label').text(nextQuestionTitle);\n            }\n        }, 100);\n    }\n\n    /**\n     * Update quiz components\n     */\n    updateQuizComponents(question);\n\n    /**\n     * Show question general event\n     */\n    document.dispatchEvent(showQuestionEvent({\n        currentQuestion: question\n    }));\n}\n","export function modal(quizWrapper) {\n    let quizId = quizWrapper.attr('id');\n\n    /**\n     * Close modal\n     */\n    quizWrapper.find('.growtype-quiz-modal .growtype-quiz-modal-inner .e-close').on('click', function () {\n        $(this).closest('.growtype-quiz-modal').fadeOut();\n\n        window.growtype_quiz_global[quizId]['showNextQuestionWasFired'] = false;\n\n        quizWrapper.find('.growtype-quiz-btn-go-next').attr('disabled', false);\n        quizWrapper.find('.growtype-quiz-btn-go-back').attr('disabled', false);\n    });\n\n    /**\n     * Continue button\n     */\n    let modalBtnContinueTriggered = false;\n    quizWrapper.find('.growtype-quiz-modal .growtype-quiz-modal-actions .btn-continue').on('click', function () {\n\n        if (modalBtnContinueTriggered) {\n            return;\n        }\n\n        modalBtnContinueTriggered = true;\n\n        let additionalQuestionInput = $(this).closest('.growtype-quiz-modal-content').find('[name=\"additional_question\"]');\n        let activeQuestion = quizWrapper.find('.growtype-quiz-question.is-active');\n\n        let additionalQuestionInputValue = additionalQuestionInput.val();\n\n        setTimeout(function () {\n            window.growtype_quiz_data[quizId]['answers'][activeQuestion.attr('data-key') + '_additional_question'] = [additionalQuestionInputValue];\n        }, 100)\n\n        /**\n         * Append files\n         */\n        if (additionalQuestionInput[0] ?? '') {\n            let additionalQuestionFiles = additionalQuestionInput[0].files;\n\n            if (additionalQuestionFiles && additionalQuestionFiles.length > 0) {\n                for (let i = 0; i < additionalQuestionFiles.length; i++) {\n                    window.growtype_quiz_global[quizId]['files'].append(activeQuestion.attr('data-key') + '_additional_question_' + i, additionalQuestionFiles[i]);\n                }\n            }\n        }\n\n        $(this).closest('.growtype-quiz-modal').fadeOut();\n\n        activeQuestion.find('.growtype-quiz-question-answer.is-active').addClass('skip-additional-question');\n\n        window.growtype_quiz_global[quizId]['showNextQuestionWasFired'] = false;\n\n        quizWrapper.find('.growtype-quiz-btn-go-next').attr('disabled', false);\n\n        quizWrapper.find('.growtype-quiz-btn-go-next').click();\n\n        setTimeout(function () {\n            modalBtnContinueTriggered = false;\n        }, 500);\n    });\n}\n","import {showSuccessQuestionEvent} from \"../../../events/showSuccessQuestionEvent\";\nimport {saveQuizDataEvent} from \"../../../events/saveQuizDataEvent\";\nimport {getQuizData} from \"../../../helpers/getQuizData\";\n\n/**\n * Calculate time\n */\nexport function countDownTimer(quizWrapper) {\n    let quizId = quizWrapper.attr('id');\n    let timer = quizWrapper.find('.growtype-quiz-timer');\n\n    if (timer.length === 0) {\n        return false;\n    }\n\n    window.growtype_quiz_global[quizId]['countdown'] = {};\n\n    let durationInSeconds = timer.attr('data-duration');\n    let currentTime = new Date();\n\n    currentTime.setSeconds(currentTime.getSeconds() + Number(durationInSeconds));\n\n    let countDownDate = currentTime.getTime();\n\n    window.growtype_quiz_global[quizId]['countdown_timer'] = setInterval(function () {\n        let now = new Date().getTime();\n        let distance = countDownDate - now;\n        let days = Math.floor(distance / (1000 * 60 * 60 * 24));\n        let hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n        let minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n        let minutesFormatted = minutes;\n        let seconds = Math.floor((distance % (1000 * 60)) / 1000);\n        let secondsFormatted = seconds;\n\n        if (distance < 0) {\n            clearInterval(window.growtype_quiz_global[quizId]['countdown_timer']);\n            document.dispatchEvent(saveQuizDataEvent(getQuizData(quizId)));\n            document.dispatchEvent(showSuccessQuestionEvent());\n        } else {\n            window.growtype_quiz_global[quizId]['countdown']['duration'] = Number(durationInSeconds) - Number(((minutes * 60) + seconds));\n\n            /**\n             * Format time\n             */\n            if (minutes < 10) {\n                minutesFormatted = '0' + minutes;\n            }\n\n            if (seconds < 10) {\n                secondsFormatted = '0' + seconds;\n            }\n\n            window.growtype_quiz_global[quizId]['countdown']['current_time'] = minutesFormatted + \":\" + secondsFormatted;\n\n            timer.find('.e-time').text(window.growtype_quiz_global[quizId]['countdown']['current_time']);\n        }\n    }, 1000);\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t172: 0,\n\t697: 0,\n\t412: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunksage\"] = self[\"webpackChunksage\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\n__webpack_require__.O(undefined, [697,412], function() { return __webpack_require__(906); })\n__webpack_require__.O(undefined, [697,412], function() { return __webpack_require__(530); })\nvar __webpack_exports__ = __webpack_require__.O(undefined, [697,412], function() { return __webpack_require__(216); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","getQuizData","quizId","window","growtype_quiz_data","saveQuizDataEvent","params","CustomEvent","detail","hideProgressIndicators","quizWrapper","attr","find","hide","length","clearInterval","growtype_quiz_global","showProgressIndicators","show","disabledValueIsIncluded","disabledIf","key","split","values","undefined","includes","map","value","updateQuizComponents","question","closest","parseInt","$","hasClass","fadeOut","fadeIn","filter","this","showQuestionEvent","updateProgressCounter","slideTotalNrFormatted","slideNrFormatted","text","updateQuestionsCounter","nextQuestion","updateUrlNr","searchParams","URLSearchParams","location","search","set","newurl","protocol","host","pathname","toString","history","pushState","path","element","extraSlides","Object","entries","each","index","prev","progressbarIndicatorWidth","progressbarStepWidth","updateProgressBar","progressBar","questionsAmount","questionsCounterNr","chapters","width","progressbarWidth","remove","mainFunnelQuestionNr","separatorsStepSize","push","chapter_start","chapter_end","steps_difference","chapterLength","i","append","currentStepsLength","sessionStorage","setItem","quizGlobalStorageKey","JSON","stringify","showSuccessQuestionEvent","input","currentQuestion","removeClass","isValid","email","val","String","toLowerCase","match","addClass","validateQuestion","selectedQuestion","activeBtns","correctAnswersSelected","radio","open","answers","answer","general","checkboxes","is","setTimeout","document","addEventListener","event","existingAnswersParams","get","existingAnswers","forEach","pair","collectQuizData","keys","existingAnswer","hasOwnProperty","Set","correctlyAnswered","currentQuestionKey","currentQuestionType","correctAnswer","formData","formKey","images","files","x","name","dispatchEvent","updateBgImage","imgUrl","imageHolder","css","replace","promise","done","answerTrigger","answersLimit","answersAmount","answerType","focus","stopPropagation","showNextQuestion","trigger","click","clickInit","loader","visibleLoader","startLoader","count","html","updateLoader","duration","elementTop","offset","top","elementBottom","outerHeight","viewportTop","scrollTop","viewportBottom","height","myNumbers","Math","floor","animate","Counter","easing","step","now","ceil","toFixed","removeAttr","percent","data","radius","circumference","PI","strokeDashOffset","change","e","maxFileSize","maxSizeErrorMessage","target","size","alert","selectedPlaceholderSingle","selectedPlaceholderMultiple","filesAmount","selectedPlaceholder","on","charactersLimit","additionalQuestionContent","charactersAmount","nextFunnel","submitDelay","selectedFunnels","additionalQuestions","funnelQuestionsGrouped","funnelKey","funnelIndex","funnelQuestions","nextAll","funnelQuestionIndex","funnelQuestion","adjustedFunnelKey","console","info","clonedQuestion","clone","funnelQuestionsGroupedOrdered","funnelQuestionsGroup","reverse","insertAfter","availableQuestions","warn","quizLastQuestion","currentQuestionHeight","delay","not","finishLabel","next","nextLabel","nextQuestionTitle","previousQuestion","answer_details","documentElement","body","nextQuestionTrigger","defaultInitialQuestion","log","validateQuestionEvent","initQuestion","previousQuestionTrigger","preventDefault","href","lastVisitedQuestionKey","slice","lastVisitedQuestionFunnel","prevAll","splice","showPreviousQuestion","unitSystem","updateGlobalUnitSystem","selector","existingStorage","parse","getItem","updateUnitSystemSelector","updateUnitSystemSelectors","initialDate","Date","extraDetails","extra_details","quizPostId","quizSlug","rawFiles","FileList","Array","isArray","FormData","growtype_quiz_local","unique_hash","existingToken","token","localStorage","growtype_quiz_unique_hash","prepareSubmitFormData","ajax","url","ajax_url","type","processData","contentType","cache","enctype","beforeSend","success","redirectUrl","redirect_url","results_url","error","answersEvaluated","Event","resultsEvaluatedEvent","restartQuizTrigger","firstQuestion","showFirstQuestion","results","correctAnswersResultFormatted","evaluateQuizData","quizLoaderWrapper","redirect","ready","growtypeQuizSetParams","init","questionNr","first","isNaN","showInitialQuestion","modalBtnContinueTriggered","additionalQuestionInput","activeQuestion","additionalQuestionInputValue","additionalQuestionFiles","modal","setInterval","durationInMilliseconds","timer","durationInSeconds","currentTime","setSeconds","getSeconds","Number","countDownDate","getTime","distance","minutes","minutesFormatted","seconds","secondsFormatted","countDownTimer","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","r","o","obj","prop","prototype","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","id","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}